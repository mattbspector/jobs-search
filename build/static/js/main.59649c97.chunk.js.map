{"version":3,"sources":["components/Overlay.js","components/App.js","index.js"],"names":["KEY_WORDS","Overlay","props","job","data","react_default","a","createElement","className","style","backgroundColor","onClick","closeOverlay","job_company_name","job_title","job_location","job_desc_text","map","text","dist_main_default","searchWords","textToHighlight","job_url","Button","target","variant","color","href","makeStyles","root","width","overflowX","table","minWidth","BASE_URL","DEFAULT_QUERY","randomIntFromInterval","min","max","Math","floor","random","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","tableData","setTableData","_useState3","queryString","queryObj","_useState4","queryData","setQueryData","_useState5","_useState6","showOverlay","toggleOverlay","_useState7","_useState8","overlayData","setOverlayData","_useState9","_useState10","dailyJobs","setDailyJobs","buildQueryString","newString","keys","forEach","key","it","queryVal","includes","handleSearch","e","value","newQueryObj","objectSpread2","useEffect","axios","get","then","res","jobs","hits","newJob","score","_source","sort","b","height","src","TextField","id","label","onChange","margin","RadioGroup","aria-label","name","event","FormControlLabel","control","Radio","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","_id","document","getElementById"],"mappings":"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","file":"static/js/main.59649c97.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button} from '@material-ui/core';\nimport axios from 'axios';\nimport '../css/main.css';\nimport Highlighter from \"react-highlight-words\";\n\n\nconst KEY_WORDS = ['HTML', 'CSS', 'JavaScript', 'Git', ' UI ', 'Principles', 'React', 'Redux', 'React Router', 'HTTP/Ajax', 'Functional Programming Techniques', 'Advanced React', 'State Management', 'Web Applications','Java Fundamentals', 'Java Frameworks', 'API Introductions','Python and OOP', 'Algorithms', 'Data Structures', 'Hash Tables and Blockchains', 'Graphs and Computer Architecture'];\n\nconst BASE_URL = 'http://ec2-18-144-69-47.us-west-1.compute.amazonaws.com:9200/jobs/jobs/_search';\nconst DEFAULT_QUERY = '?size=50';\n\nfunction randomIntFromInterval(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction highlight(text) {\n  var inputText = document.getElementById(\"inputText\");\n  var innerHTML = inputText.innerHTML;\n  var index = innerHTML.indexOf(text);\n  if (index >= 0) {\n   innerHTML = innerHTML.substring(0,index) + \"<span class='highlight'>\" + innerHTML.substring(index,index+text.length) + \"</span>\" + innerHTML.substring(index + text.length);\n   inputText.innerHTML = innerHTML;\n  }\n}\n\nexport default function Overlay(props) {\n  const job = props.data.job || {};\n\n  return (\n    <div className=\"Pos(f) W(100%) H(100%) T(0) B(0) Start(0) End(0) Z(1000)\" style={{backgroundColor: 'rgba(0,0,0,0.5)'}}>\n      <div className=\"Bgc(white) Bdrs(6px) W(55%) Mx(a) Mb(0) Mt(100px) P(15px) H(500px) Ovy(s)\">\n        <div className=\"D(f) Pb(5px) Mb(10px) Jc(sb) Bdbw(1px) Bdbc(#eeeeee) Bdbs(s)\">\n          <div className=\"Fz(14px)\">Job Details</div>\n          <span className=\"Cur(p) Fl(end) Pend(5px)\" onClick={() => props.closeOverlay()}>x</span>\n        </div>\n        <div className=\"Pt(15px)\">\n          <div className=\"D(f) Jc(sb)\">\n            <div className=\"Fz(18px)\"><span className=\"C(#990c0c)\">Company Name:</span> {job.job_company_name}</div>\n            <div className=\"Fz(18px)\"><span className=\"C(#990c0c)\">Title:</span> {job.job_title}</div>\n            <div className=\"Fz(18px)\"><span className=\"C(#990c0c)\">Location:</span> {job.job_location}</div>\n          </div>\n          <div className=\"Pt(20px)\">\n          {\n            job.job_desc_text.map((text) => {\n\n              return (\n\n              <div className=\"Pt(12px)\">\n                <Highlighter\n                    searchWords={KEY_WORDS}\n                    textToHighlight={text}\n                  />\n              </div>\n            )})\n          }\n          </div>\n          <div className=\"Pt(25px) Mx(a) My(0) Ta(c) W(40%)\">\n            {\n              job.job_url ?\n              <Button className=\"W(100%)\" target=\"_blank\" variant=\"contained\" color=\"primary\" href={job.job_url}>\n                Visit Job Listing\n              </Button> : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Paper, TextField, RadioGroup, FormControlLabel, Radio} from '@material-ui/core';\nimport axios from 'axios';\nimport '../css/main.css';\nimport Overlay  from './Overlay';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst BASE_URL = 'http://ec2-18-144-69-47.us-west-1.compute.amazonaws.com:9200/jobs/jobs/_search';\nconst DEFAULT_QUERY = '?size=50';\n\nfunction randomIntFromInterval(min, max) { // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default function SimpleTable() {\n  const [tableData, setTableData] = useState([]);\n  const [queryData, setQueryData] = useState({\n    queryString: BASE_URL + DEFAULT_QUERY,\n    queryObj: {}\n  })\n  const [showOverlay, toggleOverlay] = useState(false);\n  const [overlayData, setOverlayData] = useState({});\n  const [dailyJobs, setDailyJobs] = useState(9);\n\n  const buildQueryString = (queryObj) => {\n    let newString = BASE_URL + DEFAULT_QUERY;\n\n    Object.keys(queryObj).forEach((key, it) => {\n\n      const queryVal = queryObj[key];\n      if (queryVal) {\n        if (!newString.includes('&q=')) {\n          newString += '&q=';\n        }\n        newString += key + ':' + queryVal + '+';\n      }\n    });\n\n    setQueryData({\n      queryObj: queryObj,\n      queryString: newString\n    });\n  }\n\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n\n    const newQueryObj = {\n      ...queryData.queryObj,\n      job_desc_text: value\n    };\n\n    buildQueryString(newQueryObj);\n  };\n\n  const handleRoleChange = event => {\n    const value = event.target.value;\n\n    const newQueryObj = {\n      ...queryData.queryObj,\n      job_title: value\n    };\n\n    buildQueryString(newQueryObj);\n  }\n\n  const handleLocationSearch = event => {\n    const value = event.target.value;\n\n    const newQueryObj = {\n      ...queryData.queryObj,\n      job_location: value\n    };\n\n    buildQueryString(newQueryObj);\n  }\n\n  const openOverlay = (job) => {\n    let newjobnumber = dailyJobs + 1;\n    setDailyJobs(newjobnumber);\n    setOverlayData({\n      job: job\n    });\n    toggleOverlay(true);\n  }\n\n  useEffect(() => {\n    axios.get(queryData.queryString)\n      .then(res => {\n        const data = res.data || {};\n        const jobs = data.hits.hits || [];\n        jobs.map((job) => {\n          let newJob = job;\n          newJob.score = 0;\n          if (newJob._source.job_title) {\n            newJob.score += randomIntFromInterval(30,40);\n          }\n\n          if (newJob._source.job_location) {\n            newJob.score += randomIntFromInterval(30,40);\n          }\n\n          newJob.score += randomIntFromInterval(10, 20);\n\n          if (newJob._source.job_company_name.includes('Thunder')) {\n            newJob.score = 98;\n          }\n\n          return newJob;\n        });\n\n        jobs.sort((a, b) => {\n          if (a.score > b.score) return -1;\n          return 1;\n        });\n\n        setTableData(jobs);\n      })\n  }, [queryData.queryString]);\n\n  return (\n    <div>\n      {\n        showOverlay ?\n        <Overlay data={overlayData} closeOverlay={toggleOverlay} /> : null\n      }\n      <div className=\"P(20px) D(f) Jc(sb)\">\n        <img height=\"32px\" src=\"/Lambda_Logo_red_small.png\" />\n        <div className=\"Fz(30px)\">Harvest</div>\n        <div className=\"Va(m) Ta(s)\">\n          <div className=\"D(f) Ai(c)\">\n            <span className=\"Pend(5px)\">\n            <img className=\"Bdrs(50%)\" src='/treydon.png' height='30px'/></span>\n            <div>\n            Welcome <span className=\"Pstart(5px) C(blue)\">Treyden!</span>\n            </div>\n          </div>\n          <div className=\"Pt(5px)\">Daily Progress: {dailyJobs} / 10 Jobs</div>\n        </div>\n      </div>\n      <div className=\"W(100%) Ovx(auto) D(f)\">\n        <div className=\"W(20%) Bgc(#eeeeee) Ta(c)\">\n        <TextField\n          id='search'\n          label='Search'\n          onChange={(e) => handleSearch(e)}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <div className=\"Ta(s) Bgc(#e7a2ab) Mt(15px)\">\n          <div className=\"P(8px)\">Roles:</div>\n          <RadioGroup className=\"Px(8px)\" aria-label=\"role\" name=\"role\" onChange={handleRoleChange}>\n            <FormControlLabel value=\"frontend+engineer\" control={<Radio />} label=\"Frontend Engineer\" />\n            <FormControlLabel value=\"fullstack+engineer\" control={<Radio />} label=\"Fullstack Engineer\" />\n            <FormControlLabel value=\"javascript+engineer\" control={<Radio />} label=\"Javascript Engineer\" />\n            <FormControlLabel value=\"ui+engineer\" control={<Radio />} label=\"UI Engineer\" />\n            <FormControlLabel value=\"react+developer\" control={<Radio />} label=\"React Developer\" />\n            <FormControlLabel value=\"software+engineer\" control={<Radio />} label=\"Software Engineer\" />\n            <FormControlLabel value=\"web+developer\" control={<Radio />} label=\"Web Developer\" />\n          </RadioGroup>\n        </div>\n\n        <div className=\"Ta(s) Bgc(#ce5a70) \">\n          <div className=\"P(8px)\">Technology:</div>\n          <RadioGroup className=\"Px(8px)\" aria-label=\"Technology\" name=\"technology\" onChange={handleSearch}>\n            <FormControlLabel value=\"react\" control={<Radio />} label=\"React\" />\n            <FormControlLabel value=\"angular\" control={<Radio />} label=\"Angular\" />\n            <FormControlLabel value=\"ember\" control={<Radio />} label=\"Ember\" />\n            <FormControlLabel value=\"mustache\" control={<Radio />} label=\"Mustache\" />\n            <FormControlLabel value=\"node\" control={<Radio />} label=\"Node.js\" />\n            <FormControlLabel value=\"express\" control={<Radio />} label=\"Express\" />\n          </RadioGroup>\n        </div>\n\n        <div className=\"Ta(s) Bgc(#9e001c) \">\n          <div className=\"P(8px)\">Location:</div>\n          <RadioGroup className=\"Px(8px)\" aria-label=\"Technology\" name=\"technology\" onChange={handleLocationSearch}>\n            <FormControlLabel value=\"san+francisco\" control={<Radio />} label=\"San Francisco\" />\n            <FormControlLabel value=\"new+york\" control={<Radio />} label=\"New York\" />\n            <FormControlLabel value=\"houston\" control={<Radio />} label=\"Houston\" />\n            <FormControlLabel value=\"chicago\" control={<Radio />} label=\"Chicago\" />\n          </RadioGroup>\n        </div>\n\n        </div>\n        <Paper className=\"W(80%)\">\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Harvest Score</TableCell>\n                <TableCell  align=\"left\">Company Name</TableCell>\n                <TableCell align=\"left\">Job Title</TableCell>\n                <TableCell align=\"left\">Location</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableData.map(row => {\n                return (\n                  <TableRow key={row._id} className=\"Cur(p) Bgc(#e6f2fa):h\" onClick={() => openOverlay(row._source)}>\n                    <TableCell align=\"center\">\n                      <span className=\"Fz(18px) Fw(b)\" style={{color: row.score >= 80 ? 'green' : 'red'}}>{row.score}</span>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {row._source.job_company_name || 'Unable to Scrape'}\n                    </TableCell>\n                    <TableCell align=\"left\">{row._source.job_title || 'Unable to Scrape' }</TableCell>\n                    <TableCell align=\"left\">{row._source.job_location || 'Unable to Scrape'}</TableCell>\n                  </TableRow>\n                )\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}